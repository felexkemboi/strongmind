name: Run migrations, tests and pre-build

on:
  workflow_dispatch:
  pull_request:
    branches:
      - develop
      - master

jobs:
  build-app:
    name: Run Build
    runs-on: ${{ matrix.operating-system }}

    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-18.04]
        php-versions: ['7.4']

    services:
      # postgres Label used to access the service container
      postgres:
        # Docker Hub image (also with version)
        image: postgres:13
        env:
          ## Accessing to Github secrets, where you can store your configuration
          POSTGRES_PASSWORD: postgres
          POSTGRES_DATABASE: strongminds
          POSTGRES_USER: postgresql
        ## map the "external" 33306 port with the "internal" 3306
        ports:
          - 5432:5432
        # Set health checks to wait until mysql database has started (it takes some seconds to start)
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Get npm cache directory
        id: npm-cache
        run: echo "::set-output name=dir::$(npm config get cache)"

      - name: Cache npm dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          # Use package.json for key, if package-lock.json is not committed.
          # key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: NPM install
        run: npm install

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, dom, fileinfo
          # optional
          coverage: xdebug

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Composer install
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Run migrations
        env:
          DB_CONNECTION: psql
          DB_DATABASE: strongminds
          DB_USERNAME: postgresql
          DB_PORT: 5432
          DB_PASSWORD: postgres
        run: |
          php artisan migrate --force
